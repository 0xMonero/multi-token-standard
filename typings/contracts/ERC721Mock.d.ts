/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Contract, ContractTransaction, EventFilter } from "ethers";
import { Provider } from "ethers/providers";
import { BigNumber } from "ethers/utils";

export class ERC721Mock extends Contract {
  functions: {
    supportsInterface(interfaceId: string): Promise<boolean>;

    getApproved(tokenId: number | string): Promise<string>;

    ownerOf(tokenId: number | string): Promise<string>;

    balanceOf(owner: string): Promise<BigNumber>;

    isApprovedForAll(owner: string, operator: string): Promise<boolean>;

    approve(to: string, tokenId: number | string): Promise<ContractTransaction>;

    transferFrom(
      from: string,
      to: string,
      tokenId: number | string
    ): Promise<ContractTransaction>;

    safeTransferFrom(
      from: string,
      to: string,
      tokenId: number | string
    ): Promise<ContractTransaction>;

    initialize(): Promise<ContractTransaction>;

    setApprovalForAll(
      to: string,
      approved: boolean
    ): Promise<ContractTransaction>;

    mockMint(
      _address: string,
      _tokenID: number | string
    ): Promise<ContractTransaction>;

    batchTransferFrom(
      _from: string,
      _to: string,
      _tokenIDs: (number | string)[]
    ): Promise<ContractTransaction>;
  };
  filters: {
    Transfer(
      from: string | null,
      to: string | null,
      tokenId: number | string | null
    ): EventFilter;

    Approval(
      owner: string | null,
      approved: string | null,
      tokenId: number | string | null
    ): EventFilter;

    ApprovalForAll(
      owner: string | null,
      operator: string | null,
      approved: null
    ): EventFilter;
  };
}
